/*
 * NOTE: Autogenerated file using genpinctrl.py
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include <dt-bindings/pinctrl/stm32f1-pinctrl.h>

/ {
	soc {
		pinctrl: pin-controller@40010800 {

			/* ADC_IN */

			adc1_in0_pa0: adc1_in0_pa0 {
				pinmux = <STM32F1_PINMUX('A', 0, ANALOG, NO_REMAP)>;
			};

			adc1_in1_pa1: adc1_in1_pa1 {
				pinmux = <STM32F1_PINMUX('A', 1, ANALOG, NO_REMAP)>;
			};

			adc1_in2_pa2: adc1_in2_pa2 {
				pinmux = <STM32F1_PINMUX('A', 2, ANALOG, NO_REMAP)>;
			};

			adc1_in3_pa3: adc1_in3_pa3 {
				pinmux = <STM32F1_PINMUX('A', 3, ANALOG, NO_REMAP)>;
			};

			adc1_in4_pa4: adc1_in4_pa4 {
				pinmux = <STM32F1_PINMUX('A', 4, ANALOG, NO_REMAP)>;
			};

			adc1_in5_pa5: adc1_in5_pa5 {
				pinmux = <STM32F1_PINMUX('A', 5, ANALOG, NO_REMAP)>;
			};

			adc1_in6_pa6: adc1_in6_pa6 {
				pinmux = <STM32F1_PINMUX('A', 6, ANALOG, NO_REMAP)>;
			};

			adc1_in7_pa7: adc1_in7_pa7 {
				pinmux = <STM32F1_PINMUX('A', 7, ANALOG, NO_REMAP)>;
			};

			adc1_in8_pb0: adc1_in8_pb0 {
				pinmux = <STM32F1_PINMUX('B', 0, ANALOG, NO_REMAP)>;
			};

			adc1_in9_pb1: adc1_in9_pb1 {
				pinmux = <STM32F1_PINMUX('B', 1, ANALOG, NO_REMAP)>;
			};

			adc1_in10_pc0: adc1_in10_pc0 {
				pinmux = <STM32F1_PINMUX('C', 0, ANALOG, NO_REMAP)>;
			};

			adc1_in11_pc1: adc1_in11_pc1 {
				pinmux = <STM32F1_PINMUX('C', 1, ANALOG, NO_REMAP)>;
			};

			adc1_in12_pc2: adc1_in12_pc2 {
				pinmux = <STM32F1_PINMUX('C', 2, ANALOG, NO_REMAP)>;
			};

			adc1_in13_pc3: adc1_in13_pc3 {
				pinmux = <STM32F1_PINMUX('C', 3, ANALOG, NO_REMAP)>;
			};

			adc1_in14_pc4: adc1_in14_pc4 {
				pinmux = <STM32F1_PINMUX('C', 4, ANALOG, NO_REMAP)>;
			};

			adc1_in15_pc5: adc1_in15_pc5 {
				pinmux = <STM32F1_PINMUX('C', 5, ANALOG, NO_REMAP)>;
			};

			/* Analog */

			analog_pa0: analog_pa0 {
				pinmux = <STM32F1_PINMUX('A', 0, ANALOG, NO_REMAP)>;
			};

			analog_pa1: analog_pa1 {
				pinmux = <STM32F1_PINMUX('A', 1, ANALOG, NO_REMAP)>;
			};

			analog_pa2: analog_pa2 {
				pinmux = <STM32F1_PINMUX('A', 2, ANALOG, NO_REMAP)>;
			};

			analog_pa3: analog_pa3 {
				pinmux = <STM32F1_PINMUX('A', 3, ANALOG, NO_REMAP)>;
			};

			analog_pa4: analog_pa4 {
				pinmux = <STM32F1_PINMUX('A', 4, ANALOG, NO_REMAP)>;
			};

			analog_pa5: analog_pa5 {
				pinmux = <STM32F1_PINMUX('A', 5, ANALOG, NO_REMAP)>;
			};

			analog_pa6: analog_pa6 {
				pinmux = <STM32F1_PINMUX('A', 6, ANALOG, NO_REMAP)>;
			};

			analog_pa7: analog_pa7 {
				pinmux = <STM32F1_PINMUX('A', 7, ANALOG, NO_REMAP)>;
			};

			analog_pa8: analog_pa8 {
				pinmux = <STM32F1_PINMUX('A', 8, ANALOG, NO_REMAP)>;
			};

			analog_pa9: analog_pa9 {
				pinmux = <STM32F1_PINMUX('A', 9, ANALOG, NO_REMAP)>;
			};

			analog_pa10: analog_pa10 {
				pinmux = <STM32F1_PINMUX('A', 10, ANALOG, NO_REMAP)>;
			};

			analog_pa11: analog_pa11 {
				pinmux = <STM32F1_PINMUX('A', 11, ANALOG, NO_REMAP)>;
			};

			analog_pa12: analog_pa12 {
				pinmux = <STM32F1_PINMUX('A', 12, ANALOG, NO_REMAP)>;
			};

			analog_pa13: analog_pa13 {
				pinmux = <STM32F1_PINMUX('A', 13, ANALOG, NO_REMAP)>;
			};

			analog_pa14: analog_pa14 {
				pinmux = <STM32F1_PINMUX('A', 14, ANALOG, NO_REMAP)>;
			};

			analog_pa15: analog_pa15 {
				pinmux = <STM32F1_PINMUX('A', 15, ANALOG, NO_REMAP)>;
			};

			analog_pb0: analog_pb0 {
				pinmux = <STM32F1_PINMUX('B', 0, ANALOG, NO_REMAP)>;
			};

			analog_pb1: analog_pb1 {
				pinmux = <STM32F1_PINMUX('B', 1, ANALOG, NO_REMAP)>;
			};

			analog_pb2: analog_pb2 {
				pinmux = <STM32F1_PINMUX('B', 2, ANALOG, NO_REMAP)>;
			};

			analog_pb3: analog_pb3 {
				pinmux = <STM32F1_PINMUX('B', 3, ANALOG, NO_REMAP)>;
			};

			analog_pb4: analog_pb4 {
				pinmux = <STM32F1_PINMUX('B', 4, ANALOG, NO_REMAP)>;
			};

			analog_pb5: analog_pb5 {
				pinmux = <STM32F1_PINMUX('B', 5, ANALOG, NO_REMAP)>;
			};

			analog_pb6: analog_pb6 {
				pinmux = <STM32F1_PINMUX('B', 6, ANALOG, NO_REMAP)>;
			};

			analog_pb7: analog_pb7 {
				pinmux = <STM32F1_PINMUX('B', 7, ANALOG, NO_REMAP)>;
			};

			analog_pb8: analog_pb8 {
				pinmux = <STM32F1_PINMUX('B', 8, ANALOG, NO_REMAP)>;
			};

			analog_pb9: analog_pb9 {
				pinmux = <STM32F1_PINMUX('B', 9, ANALOG, NO_REMAP)>;
			};

			analog_pb10: analog_pb10 {
				pinmux = <STM32F1_PINMUX('B', 10, ANALOG, NO_REMAP)>;
			};

			analog_pb11: analog_pb11 {
				pinmux = <STM32F1_PINMUX('B', 11, ANALOG, NO_REMAP)>;
			};

			analog_pb12: analog_pb12 {
				pinmux = <STM32F1_PINMUX('B', 12, ANALOG, NO_REMAP)>;
			};

			analog_pb13: analog_pb13 {
				pinmux = <STM32F1_PINMUX('B', 13, ANALOG, NO_REMAP)>;
			};

			analog_pb14: analog_pb14 {
				pinmux = <STM32F1_PINMUX('B', 14, ANALOG, NO_REMAP)>;
			};

			analog_pb15: analog_pb15 {
				pinmux = <STM32F1_PINMUX('B', 15, ANALOG, NO_REMAP)>;
			};

			analog_pc0: analog_pc0 {
				pinmux = <STM32F1_PINMUX('C', 0, ANALOG, NO_REMAP)>;
			};

			analog_pc1: analog_pc1 {
				pinmux = <STM32F1_PINMUX('C', 1, ANALOG, NO_REMAP)>;
			};

			analog_pc2: analog_pc2 {
				pinmux = <STM32F1_PINMUX('C', 2, ANALOG, NO_REMAP)>;
			};

			analog_pc3: analog_pc3 {
				pinmux = <STM32F1_PINMUX('C', 3, ANALOG, NO_REMAP)>;
			};

			analog_pc4: analog_pc4 {
				pinmux = <STM32F1_PINMUX('C', 4, ANALOG, NO_REMAP)>;
			};

			analog_pc5: analog_pc5 {
				pinmux = <STM32F1_PINMUX('C', 5, ANALOG, NO_REMAP)>;
			};

			analog_pc6: analog_pc6 {
				pinmux = <STM32F1_PINMUX('C', 6, ANALOG, NO_REMAP)>;
			};

			analog_pc7: analog_pc7 {
				pinmux = <STM32F1_PINMUX('C', 7, ANALOG, NO_REMAP)>;
			};

			analog_pc8: analog_pc8 {
				pinmux = <STM32F1_PINMUX('C', 8, ANALOG, NO_REMAP)>;
			};

			analog_pc9: analog_pc9 {
				pinmux = <STM32F1_PINMUX('C', 9, ANALOG, NO_REMAP)>;
			};

			analog_pc10: analog_pc10 {
				pinmux = <STM32F1_PINMUX('C', 10, ANALOG, NO_REMAP)>;
			};

			analog_pc11: analog_pc11 {
				pinmux = <STM32F1_PINMUX('C', 11, ANALOG, NO_REMAP)>;
			};

			analog_pc12: analog_pc12 {
				pinmux = <STM32F1_PINMUX('C', 12, ANALOG, NO_REMAP)>;
			};

			analog_pc13: analog_pc13 {
				pinmux = <STM32F1_PINMUX('C', 13, ANALOG, NO_REMAP)>;
			};

			analog_pc14: analog_pc14 {
				pinmux = <STM32F1_PINMUX('C', 14, ANALOG, NO_REMAP)>;
			};

			analog_pc15: analog_pc15 {
				pinmux = <STM32F1_PINMUX('C', 15, ANALOG, NO_REMAP)>;
			};

			analog_pd0: analog_pd0 {
				pinmux = <STM32F1_PINMUX('D', 0, ANALOG, NO_REMAP)>;
			};

			analog_pd1: analog_pd1 {
				pinmux = <STM32F1_PINMUX('D', 1, ANALOG, NO_REMAP)>;
			};

			analog_pd2: analog_pd2 {
				pinmux = <STM32F1_PINMUX('D', 2, ANALOG, NO_REMAP)>;
			};

			analog_pd3: analog_pd3 {
				pinmux = <STM32F1_PINMUX('D', 3, ANALOG, NO_REMAP)>;
			};

			analog_pd4: analog_pd4 {
				pinmux = <STM32F1_PINMUX('D', 4, ANALOG, NO_REMAP)>;
			};

			analog_pd5: analog_pd5 {
				pinmux = <STM32F1_PINMUX('D', 5, ANALOG, NO_REMAP)>;
			};

			analog_pd6: analog_pd6 {
				pinmux = <STM32F1_PINMUX('D', 6, ANALOG, NO_REMAP)>;
			};

			analog_pd7: analog_pd7 {
				pinmux = <STM32F1_PINMUX('D', 7, ANALOG, NO_REMAP)>;
			};

			analog_pd8: analog_pd8 {
				pinmux = <STM32F1_PINMUX('D', 8, ANALOG, NO_REMAP)>;
			};

			analog_pd9: analog_pd9 {
				pinmux = <STM32F1_PINMUX('D', 9, ANALOG, NO_REMAP)>;
			};

			analog_pd10: analog_pd10 {
				pinmux = <STM32F1_PINMUX('D', 10, ANALOG, NO_REMAP)>;
			};

			analog_pd11: analog_pd11 {
				pinmux = <STM32F1_PINMUX('D', 11, ANALOG, NO_REMAP)>;
			};

			analog_pd12: analog_pd12 {
				pinmux = <STM32F1_PINMUX('D', 12, ANALOG, NO_REMAP)>;
			};

			analog_pd13: analog_pd13 {
				pinmux = <STM32F1_PINMUX('D', 13, ANALOG, NO_REMAP)>;
			};

			analog_pd14: analog_pd14 {
				pinmux = <STM32F1_PINMUX('D', 14, ANALOG, NO_REMAP)>;
			};

			analog_pd15: analog_pd15 {
				pinmux = <STM32F1_PINMUX('D', 15, ANALOG, NO_REMAP)>;
			};

			analog_pe0: analog_pe0 {
				pinmux = <STM32F1_PINMUX('E', 0, ANALOG, NO_REMAP)>;
			};

			analog_pe1: analog_pe1 {
				pinmux = <STM32F1_PINMUX('E', 1, ANALOG, NO_REMAP)>;
			};

			analog_pe2: analog_pe2 {
				pinmux = <STM32F1_PINMUX('E', 2, ANALOG, NO_REMAP)>;
			};

			analog_pe3: analog_pe3 {
				pinmux = <STM32F1_PINMUX('E', 3, ANALOG, NO_REMAP)>;
			};

			analog_pe4: analog_pe4 {
				pinmux = <STM32F1_PINMUX('E', 4, ANALOG, NO_REMAP)>;
			};

			analog_pe5: analog_pe5 {
				pinmux = <STM32F1_PINMUX('E', 5, ANALOG, NO_REMAP)>;
			};

			analog_pe6: analog_pe6 {
				pinmux = <STM32F1_PINMUX('E', 6, ANALOG, NO_REMAP)>;
			};

			analog_pe7: analog_pe7 {
				pinmux = <STM32F1_PINMUX('E', 7, ANALOG, NO_REMAP)>;
			};

			analog_pe8: analog_pe8 {
				pinmux = <STM32F1_PINMUX('E', 8, ANALOG, NO_REMAP)>;
			};

			analog_pe9: analog_pe9 {
				pinmux = <STM32F1_PINMUX('E', 9, ANALOG, NO_REMAP)>;
			};

			analog_pe10: analog_pe10 {
				pinmux = <STM32F1_PINMUX('E', 10, ANALOG, NO_REMAP)>;
			};

			analog_pe11: analog_pe11 {
				pinmux = <STM32F1_PINMUX('E', 11, ANALOG, NO_REMAP)>;
			};

			analog_pe12: analog_pe12 {
				pinmux = <STM32F1_PINMUX('E', 12, ANALOG, NO_REMAP)>;
			};

			analog_pe13: analog_pe13 {
				pinmux = <STM32F1_PINMUX('E', 13, ANALOG, NO_REMAP)>;
			};

			analog_pe14: analog_pe14 {
				pinmux = <STM32F1_PINMUX('E', 14, ANALOG, NO_REMAP)>;
			};

			analog_pe15: analog_pe15 {
				pinmux = <STM32F1_PINMUX('E', 15, ANALOG, NO_REMAP)>;
			};

			analog_pf0: analog_pf0 {
				pinmux = <STM32F1_PINMUX('F', 0, ANALOG, NO_REMAP)>;
			};

			analog_pf1: analog_pf1 {
				pinmux = <STM32F1_PINMUX('F', 1, ANALOG, NO_REMAP)>;
			};

			analog_pf2: analog_pf2 {
				pinmux = <STM32F1_PINMUX('F', 2, ANALOG, NO_REMAP)>;
			};

			analog_pf3: analog_pf3 {
				pinmux = <STM32F1_PINMUX('F', 3, ANALOG, NO_REMAP)>;
			};

			analog_pf4: analog_pf4 {
				pinmux = <STM32F1_PINMUX('F', 4, ANALOG, NO_REMAP)>;
			};

			analog_pf5: analog_pf5 {
				pinmux = <STM32F1_PINMUX('F', 5, ANALOG, NO_REMAP)>;
			};

			analog_pf6: analog_pf6 {
				pinmux = <STM32F1_PINMUX('F', 6, ANALOG, NO_REMAP)>;
			};

			analog_pf7: analog_pf7 {
				pinmux = <STM32F1_PINMUX('F', 7, ANALOG, NO_REMAP)>;
			};

			analog_pf8: analog_pf8 {
				pinmux = <STM32F1_PINMUX('F', 8, ANALOG, NO_REMAP)>;
			};

			analog_pf9: analog_pf9 {
				pinmux = <STM32F1_PINMUX('F', 9, ANALOG, NO_REMAP)>;
			};

			analog_pf10: analog_pf10 {
				pinmux = <STM32F1_PINMUX('F', 10, ANALOG, NO_REMAP)>;
			};

			analog_pf11: analog_pf11 {
				pinmux = <STM32F1_PINMUX('F', 11, ANALOG, NO_REMAP)>;
			};

			analog_pf12: analog_pf12 {
				pinmux = <STM32F1_PINMUX('F', 12, ANALOG, NO_REMAP)>;
			};

			analog_pf13: analog_pf13 {
				pinmux = <STM32F1_PINMUX('F', 13, ANALOG, NO_REMAP)>;
			};

			analog_pf14: analog_pf14 {
				pinmux = <STM32F1_PINMUX('F', 14, ANALOG, NO_REMAP)>;
			};

			analog_pf15: analog_pf15 {
				pinmux = <STM32F1_PINMUX('F', 15, ANALOG, NO_REMAP)>;
			};

			analog_pg0: analog_pg0 {
				pinmux = <STM32F1_PINMUX('G', 0, ANALOG, NO_REMAP)>;
			};

			analog_pg1: analog_pg1 {
				pinmux = <STM32F1_PINMUX('G', 1, ANALOG, NO_REMAP)>;
			};

			analog_pg2: analog_pg2 {
				pinmux = <STM32F1_PINMUX('G', 2, ANALOG, NO_REMAP)>;
			};

			analog_pg3: analog_pg3 {
				pinmux = <STM32F1_PINMUX('G', 3, ANALOG, NO_REMAP)>;
			};

			analog_pg4: analog_pg4 {
				pinmux = <STM32F1_PINMUX('G', 4, ANALOG, NO_REMAP)>;
			};

			analog_pg5: analog_pg5 {
				pinmux = <STM32F1_PINMUX('G', 5, ANALOG, NO_REMAP)>;
			};

			analog_pg6: analog_pg6 {
				pinmux = <STM32F1_PINMUX('G', 6, ANALOG, NO_REMAP)>;
			};

			analog_pg7: analog_pg7 {
				pinmux = <STM32F1_PINMUX('G', 7, ANALOG, NO_REMAP)>;
			};

			analog_pg8: analog_pg8 {
				pinmux = <STM32F1_PINMUX('G', 8, ANALOG, NO_REMAP)>;
			};

			analog_pg9: analog_pg9 {
				pinmux = <STM32F1_PINMUX('G', 9, ANALOG, NO_REMAP)>;
			};

			analog_pg10: analog_pg10 {
				pinmux = <STM32F1_PINMUX('G', 10, ANALOG, NO_REMAP)>;
			};

			analog_pg11: analog_pg11 {
				pinmux = <STM32F1_PINMUX('G', 11, ANALOG, NO_REMAP)>;
			};

			analog_pg12: analog_pg12 {
				pinmux = <STM32F1_PINMUX('G', 12, ANALOG, NO_REMAP)>;
			};

			analog_pg13: analog_pg13 {
				pinmux = <STM32F1_PINMUX('G', 13, ANALOG, NO_REMAP)>;
			};

			analog_pg14: analog_pg14 {
				pinmux = <STM32F1_PINMUX('G', 14, ANALOG, NO_REMAP)>;
			};

			analog_pg15: analog_pg15 {
				pinmux = <STM32F1_PINMUX('G', 15, ANALOG, NO_REMAP)>;
			};

			/* DAC_OUT */

			dac_out1_pa4: dac_out1_pa4 {
				pinmux = <STM32F1_PINMUX('A', 4, ANALOG, NO_REMAP)>;
			};

			dac_out2_pa5: dac_out2_pa5 {
				pinmux = <STM32F1_PINMUX('A', 5, ANALOG, NO_REMAP)>;
			};

			/* I2C_SCL */

			i2c1_scl_pb6: i2c1_scl_pb6 {
				pinmux = <STM32F1_PINMUX('B', 6, ALTERNATE, I2C1_REMAP0)>;
				drive-open-drain;
			};

			i2c1_scl_pb8: i2c1_scl_pb8 {
				pinmux = <STM32F1_PINMUX('B', 8, ALTERNATE, I2C1_REMAP1)>;
				drive-open-drain;
			};

			i2c2_scl_pb10: i2c2_scl_pb10 {
				pinmux = <STM32F1_PINMUX('B', 10, ALTERNATE, NO_REMAP)>;
				drive-open-drain;
			};

			/* I2C_SDA */

			i2c1_sda_pb7: i2c1_sda_pb7 {
				pinmux = <STM32F1_PINMUX('B', 7, ALTERNATE, I2C1_REMAP0)>;
				drive-open-drain;
			};

			i2c1_sda_pb9: i2c1_sda_pb9 {
				pinmux = <STM32F1_PINMUX('B', 9, ALTERNATE, I2C1_REMAP1)>;
				drive-open-drain;
			};

			i2c2_sda_pb11: i2c2_sda_pb11 {
				pinmux = <STM32F1_PINMUX('B', 11, ALTERNATE, NO_REMAP)>;
				drive-open-drain;
			};

			/* SPI_MASTER_MISO */

			spi1_miso_master_pa6: spi1_miso_master_pa6 {
				pinmux = <STM32F1_PINMUX('A', 6, GPIO_IN, SPI1_REMAP0)>;
				bias-pull-down;
			};

			spi1_miso_master_pb4: spi1_miso_master_pb4 {
				pinmux = <STM32F1_PINMUX('B', 4, GPIO_IN, SPI1_REMAP1)>;
				bias-pull-down;
			};

			spi2_miso_master_pb14: spi2_miso_master_pb14 {
				pinmux = <STM32F1_PINMUX('B', 14, GPIO_IN, NO_REMAP)>;
				bias-pull-down;
			};

			spi3_miso_master_pb4: spi3_miso_master_pb4 {
				pinmux = <STM32F1_PINMUX('B', 4, GPIO_IN, SPI3_REMAP0)>;
				bias-pull-down;
			};

			/* SPI_MASTER_MOSI */

			spi1_mosi_master_pa7: spi1_mosi_master_pa7 {
				pinmux = <STM32F1_PINMUX('A', 7, ALTERNATE, SPI1_REMAP0)>;
			};

			spi1_mosi_master_pb5: spi1_mosi_master_pb5 {
				pinmux = <STM32F1_PINMUX('B', 5, ALTERNATE, SPI1_REMAP1)>;
			};

			spi2_mosi_master_pb15: spi2_mosi_master_pb15 {
				pinmux = <STM32F1_PINMUX('B', 15, ALTERNATE, NO_REMAP)>;
			};

			spi3_mosi_master_pb5: spi3_mosi_master_pb5 {
				pinmux = <STM32F1_PINMUX('B', 5, ALTERNATE, SPI3_REMAP0)>;
			};

			/* SPI_MASTER_NSS */

			spi1_nss_master_pa4: spi1_nss_master_pa4 {
				pinmux = <STM32F1_PINMUX('A', 4, ALTERNATE, SPI1_REMAP0)>;
			};

			spi1_nss_master_pa15: spi1_nss_master_pa15 {
				pinmux = <STM32F1_PINMUX('A', 15, ALTERNATE, SPI1_REMAP1)>;
			};

			spi2_nss_master_pb12: spi2_nss_master_pb12 {
				pinmux = <STM32F1_PINMUX('B', 12, ALTERNATE, NO_REMAP)>;
			};

			spi3_nss_master_pa15: spi3_nss_master_pa15 {
				pinmux = <STM32F1_PINMUX('A', 15, ALTERNATE, SPI3_REMAP0)>;
			};

			/* SPI_MASTER_SCK */

			spi1_sck_master_pa5: spi1_sck_master_pa5 {
				pinmux = <STM32F1_PINMUX('A', 5, ALTERNATE, SPI1_REMAP0)>;
			};

			spi1_sck_master_pb3: spi1_sck_master_pb3 {
				pinmux = <STM32F1_PINMUX('B', 3, ALTERNATE, SPI1_REMAP1)>;
			};

			spi2_sck_master_pb13: spi2_sck_master_pb13 {
				pinmux = <STM32F1_PINMUX('B', 13, ALTERNATE, NO_REMAP)>;
			};

			spi3_sck_master_pb3: spi3_sck_master_pb3 {
				pinmux = <STM32F1_PINMUX('B', 3, ALTERNATE, SPI3_REMAP0)>;
			};

			/* SPI_SLAVE_MISO */

			spi1_miso_slave_pa6: spi1_miso_slave_pa6 {
				pinmux = <STM32F1_PINMUX('A', 6, ALTERNATE, SPI1_REMAP0)>;
			};

			spi1_miso_slave_pb4: spi1_miso_slave_pb4 {
				pinmux = <STM32F1_PINMUX('B', 4, ALTERNATE, SPI1_REMAP1)>;
			};

			spi2_miso_slave_pb14: spi2_miso_slave_pb14 {
				pinmux = <STM32F1_PINMUX('B', 14, ALTERNATE, NO_REMAP)>;
			};

			spi3_miso_slave_pb4: spi3_miso_slave_pb4 {
				pinmux = <STM32F1_PINMUX('B', 4, ALTERNATE, SPI3_REMAP0)>;
			};

			/* SPI_SLAVE_MOSI */

			spi1_mosi_slave_pa7: spi1_mosi_slave_pa7 {
				pinmux = <STM32F1_PINMUX('A', 7, GPIO_IN, SPI1_REMAP0)>;
			};

			spi1_mosi_slave_pb5: spi1_mosi_slave_pb5 {
				pinmux = <STM32F1_PINMUX('B', 5, GPIO_IN, SPI1_REMAP1)>;
			};

			spi2_mosi_slave_pb15: spi2_mosi_slave_pb15 {
				pinmux = <STM32F1_PINMUX('B', 15, GPIO_IN, NO_REMAP)>;
			};

			spi3_mosi_slave_pb5: spi3_mosi_slave_pb5 {
				pinmux = <STM32F1_PINMUX('B', 5, GPIO_IN, SPI3_REMAP0)>;
			};

			/* SPI_SLAVE_NSS */

			spi1_nss_slave_pa4: spi1_nss_slave_pa4 {
				pinmux = <STM32F1_PINMUX('A', 4, GPIO_IN, SPI1_REMAP0)>;
				bias-pull-up;
			};

			spi1_nss_slave_pa15: spi1_nss_slave_pa15 {
				pinmux = <STM32F1_PINMUX('A', 15, GPIO_IN, SPI1_REMAP1)>;
				bias-pull-up;
			};

			spi2_nss_slave_pb12: spi2_nss_slave_pb12 {
				pinmux = <STM32F1_PINMUX('B', 12, GPIO_IN, NO_REMAP)>;
				bias-pull-up;
			};

			spi3_nss_slave_pa15: spi3_nss_slave_pa15 {
				pinmux = <STM32F1_PINMUX('A', 15, GPIO_IN, SPI3_REMAP0)>;
				bias-pull-up;
			};

			/* SPI_SLAVE_SCK */

			spi1_sck_slave_pa5: spi1_sck_slave_pa5 {
				pinmux = <STM32F1_PINMUX('A', 5, GPIO_IN, SPI1_REMAP0)>;
			};

			spi1_sck_slave_pb3: spi1_sck_slave_pb3 {
				pinmux = <STM32F1_PINMUX('B', 3, GPIO_IN, SPI1_REMAP1)>;
			};

			spi2_sck_slave_pb13: spi2_sck_slave_pb13 {
				pinmux = <STM32F1_PINMUX('B', 13, GPIO_IN, NO_REMAP)>;
			};

			spi3_sck_slave_pb3: spi3_sck_slave_pb3 {
				pinmux = <STM32F1_PINMUX('B', 3, GPIO_IN, SPI3_REMAP0)>;
			};

			/* TIM_CH_PWM / TIM_CHN_PWM */

			tim10_ch1_pwm_pb8: tim10_ch1_pwm_pb8 {
				pinmux = <STM32F1_PINMUX('B', 8, ALTERNATE, TIM10_REMAP0)>;
			};

			tim10_ch1_pwm_pf6: tim10_ch1_pwm_pf6 {
				pinmux = <STM32F1_PINMUX('F', 6, ALTERNATE, TIM10_REMAP1)>;
			};

			tim11_ch1_pwm_pb9: tim11_ch1_pwm_pb9 {
				pinmux = <STM32F1_PINMUX('B', 9, ALTERNATE, TIM11_REMAP0)>;
			};

			tim11_ch1_pwm_pf7: tim11_ch1_pwm_pf7 {
				pinmux = <STM32F1_PINMUX('F', 7, ALTERNATE, TIM11_REMAP1)>;
			};

			tim2_ch1_pwm_pa0: tim2_ch1_pwm_pa0 {
				pinmux = <STM32F1_PINMUX('A', 0, ALTERNATE, TIM2_REMAP0)>;
			};

			tim2_ch1_pwm_pa0: tim2_ch1_pwm_pa0 {
				pinmux = <STM32F1_PINMUX('A', 0, ALTERNATE, TIM2_REMAP2)>;
			};

			tim2_ch2_pwm_pa1: tim2_ch2_pwm_pa1 {
				pinmux = <STM32F1_PINMUX('A', 1, ALTERNATE, TIM2_REMAP0)>;
			};

			tim2_ch2_pwm_pa1: tim2_ch2_pwm_pa1 {
				pinmux = <STM32F1_PINMUX('A', 1, ALTERNATE, TIM2_REMAP2)>;
			};

			tim2_ch3_pwm_pa2: tim2_ch3_pwm_pa2 {
				pinmux = <STM32F1_PINMUX('A', 2, ALTERNATE, TIM2_REMAP0)>;
			};

			tim2_ch3_pwm_pa2: tim2_ch3_pwm_pa2 {
				pinmux = <STM32F1_PINMUX('A', 2, ALTERNATE, TIM2_REMAP1)>;
			};

			tim2_ch4_pwm_pa3: tim2_ch4_pwm_pa3 {
				pinmux = <STM32F1_PINMUX('A', 3, ALTERNATE, TIM2_REMAP0)>;
			};

			tim2_ch4_pwm_pa3: tim2_ch4_pwm_pa3 {
				pinmux = <STM32F1_PINMUX('A', 3, ALTERNATE, TIM2_REMAP1)>;
			};

			tim2_ch1_pwm_pa15: tim2_ch1_pwm_pa15 {
				pinmux = <STM32F1_PINMUX('A', 15, ALTERNATE, TIM2_REMAP1)>;
			};

			tim2_ch1_pwm_pa15: tim2_ch1_pwm_pa15 {
				pinmux = <STM32F1_PINMUX('A', 15, ALTERNATE, TIM2_REMAP3)>;
			};

			tim2_ch2_pwm_pb3: tim2_ch2_pwm_pb3 {
				pinmux = <STM32F1_PINMUX('B', 3, ALTERNATE, TIM2_REMAP1)>;
			};

			tim2_ch2_pwm_pb3: tim2_ch2_pwm_pb3 {
				pinmux = <STM32F1_PINMUX('B', 3, ALTERNATE, TIM2_REMAP3)>;
			};

			tim2_ch3_pwm_pb10: tim2_ch3_pwm_pb10 {
				pinmux = <STM32F1_PINMUX('B', 10, ALTERNATE, TIM2_REMAP2)>;
			};

			tim2_ch3_pwm_pb10: tim2_ch3_pwm_pb10 {
				pinmux = <STM32F1_PINMUX('B', 10, ALTERNATE, TIM2_REMAP3)>;
			};

			tim2_ch4_pwm_pb11: tim2_ch4_pwm_pb11 {
				pinmux = <STM32F1_PINMUX('B', 11, ALTERNATE, TIM2_REMAP2)>;
			};

			tim2_ch4_pwm_pb11: tim2_ch4_pwm_pb11 {
				pinmux = <STM32F1_PINMUX('B', 11, ALTERNATE, TIM2_REMAP3)>;
			};

			tim12_ch1_pwm_pb14: tim12_ch1_pwm_pb14 {
				pinmux = <STM32F1_PINMUX('B', 14, ALTERNATE, NO_REMAP)>;
			};

			tim12_ch2_pwm_pb15: tim12_ch2_pwm_pb15 {
				pinmux = <STM32F1_PINMUX('B', 15, ALTERNATE, NO_REMAP)>;
			};

			tim13_ch1_pwm_pa6: tim13_ch1_pwm_pa6 {
				pinmux = <STM32F1_PINMUX('A', 6, ALTERNATE, TIM13_REMAP0)>;
			};

			tim3_ch1_pwm_pa6: tim3_ch1_pwm_pa6 {
				pinmux = <STM32F1_PINMUX('A', 6, ALTERNATE, TIM3_REMAP0)>;
			};

			tim3_ch2_pwm_pa7: tim3_ch2_pwm_pa7 {
				pinmux = <STM32F1_PINMUX('A', 7, ALTERNATE, TIM3_REMAP0)>;
			};

			tim3_ch3_pwm_pb0: tim3_ch3_pwm_pb0 {
				pinmux = <STM32F1_PINMUX('B', 0, ALTERNATE, TIM3_REMAP0)>;
			};

			tim3_ch3_pwm_pb0: tim3_ch3_pwm_pb0 {
				pinmux = <STM32F1_PINMUX('B', 0, ALTERNATE, TIM3_REMAP1)>;
			};

			tim3_ch4_pwm_pb1: tim3_ch4_pwm_pb1 {
				pinmux = <STM32F1_PINMUX('B', 1, ALTERNATE, TIM3_REMAP0)>;
			};

			tim3_ch4_pwm_pb1: tim3_ch4_pwm_pb1 {
				pinmux = <STM32F1_PINMUX('B', 1, ALTERNATE, TIM3_REMAP1)>;
			};

			tim3_ch1_pwm_pb4: tim3_ch1_pwm_pb4 {
				pinmux = <STM32F1_PINMUX('B', 4, ALTERNATE, TIM3_REMAP1)>;
			};

			tim3_ch2_pwm_pb5: tim3_ch2_pwm_pb5 {
				pinmux = <STM32F1_PINMUX('B', 5, ALTERNATE, TIM3_REMAP1)>;
			};

			tim3_ch1_pwm_pc6: tim3_ch1_pwm_pc6 {
				pinmux = <STM32F1_PINMUX('C', 6, ALTERNATE, TIM3_REMAP2)>;
			};

			tim3_ch2_pwm_pc7: tim3_ch2_pwm_pc7 {
				pinmux = <STM32F1_PINMUX('C', 7, ALTERNATE, TIM3_REMAP2)>;
			};

			tim3_ch3_pwm_pc8: tim3_ch3_pwm_pc8 {
				pinmux = <STM32F1_PINMUX('C', 8, ALTERNATE, TIM3_REMAP2)>;
			};

			tim3_ch4_pwm_pc9: tim3_ch4_pwm_pc9 {
				pinmux = <STM32F1_PINMUX('C', 9, ALTERNATE, TIM3_REMAP2)>;
			};

			tim13_ch1_pwm_pf8: tim13_ch1_pwm_pf8 {
				pinmux = <STM32F1_PINMUX('F', 8, ALTERNATE, TIM13_REMAP1)>;
			};

			tim14_ch1_pwm_pa7: tim14_ch1_pwm_pa7 {
				pinmux = <STM32F1_PINMUX('A', 7, ALTERNATE, TIM14_REMAP0)>;
			};

			tim4_ch1_pwm_pb6: tim4_ch1_pwm_pb6 {
				pinmux = <STM32F1_PINMUX('B', 6, ALTERNATE, TIM4_REMAP0)>;
			};

			tim4_ch2_pwm_pb7: tim4_ch2_pwm_pb7 {
				pinmux = <STM32F1_PINMUX('B', 7, ALTERNATE, TIM4_REMAP0)>;
			};

			tim4_ch3_pwm_pb8: tim4_ch3_pwm_pb8 {
				pinmux = <STM32F1_PINMUX('B', 8, ALTERNATE, TIM4_REMAP0)>;
			};

			tim4_ch4_pwm_pb9: tim4_ch4_pwm_pb9 {
				pinmux = <STM32F1_PINMUX('B', 9, ALTERNATE, TIM4_REMAP0)>;
			};

			tim4_ch1_pwm_pd12: tim4_ch1_pwm_pd12 {
				pinmux = <STM32F1_PINMUX('D', 12, ALTERNATE, TIM4_REMAP1)>;
			};

			tim4_ch2_pwm_pd13: tim4_ch2_pwm_pd13 {
				pinmux = <STM32F1_PINMUX('D', 13, ALTERNATE, TIM4_REMAP1)>;
			};

			tim4_ch3_pwm_pd14: tim4_ch3_pwm_pd14 {
				pinmux = <STM32F1_PINMUX('D', 14, ALTERNATE, TIM4_REMAP1)>;
			};

			tim4_ch4_pwm_pd15: tim4_ch4_pwm_pd15 {
				pinmux = <STM32F1_PINMUX('D', 15, ALTERNATE, TIM4_REMAP1)>;
			};

			tim14_ch1_pwm_pf9: tim14_ch1_pwm_pf9 {
				pinmux = <STM32F1_PINMUX('F', 9, ALTERNATE, TIM14_REMAP1)>;
			};

			tim5_ch1_pwm_pa0: tim5_ch1_pwm_pa0 {
				pinmux = <STM32F1_PINMUX('A', 0, ALTERNATE, NO_REMAP)>;
			};

			tim5_ch2_pwm_pa1: tim5_ch2_pwm_pa1 {
				pinmux = <STM32F1_PINMUX('A', 1, ALTERNATE, NO_REMAP)>;
			};

			tim5_ch3_pwm_pa2: tim5_ch3_pwm_pa2 {
				pinmux = <STM32F1_PINMUX('A', 2, ALTERNATE, NO_REMAP)>;
			};

			tim5_ch4_pwm_pa3: tim5_ch4_pwm_pa3 {
				pinmux = <STM32F1_PINMUX('A', 3, ALTERNATE, NO_REMAP)>;
			};

			tim9_ch1_pwm_pa2: tim9_ch1_pwm_pa2 {
				pinmux = <STM32F1_PINMUX('A', 2, ALTERNATE, TIM9_REMAP0)>;
			};

			tim9_ch2_pwm_pa3: tim9_ch2_pwm_pa3 {
				pinmux = <STM32F1_PINMUX('A', 3, ALTERNATE, TIM9_REMAP0)>;
			};

			tim9_ch1_pwm_pe5: tim9_ch1_pwm_pe5 {
				pinmux = <STM32F1_PINMUX('E', 5, ALTERNATE, TIM9_REMAP1)>;
			};

			tim9_ch2_pwm_pe6: tim9_ch2_pwm_pe6 {
				pinmux = <STM32F1_PINMUX('E', 6, ALTERNATE, TIM9_REMAP1)>;
			};

			/* UART_CTS / USART_CTS */

			usart1_cts_pa11: usart1_cts_pa11 {
				pinmux = <STM32F1_PINMUX('A', 11, GPIO_IN, NO_REMAP)>;
				bias-pull-up;
				drive-open-drain;
			};

			usart2_cts_pa0: usart2_cts_pa0 {
				pinmux = <STM32F1_PINMUX('A', 0, GPIO_IN, USART2_REMAP0)>;
				bias-pull-up;
				drive-open-drain;
			};

			usart2_cts_pd3: usart2_cts_pd3 {
				pinmux = <STM32F1_PINMUX('D', 3, GPIO_IN, USART2_REMAP1)>;
				bias-pull-up;
				drive-open-drain;
			};

			usart3_cts_pb13: usart3_cts_pb13 {
				pinmux = <STM32F1_PINMUX('B', 13, GPIO_IN, USART3_REMAP0)>;
				bias-pull-up;
				drive-open-drain;
			};

			usart3_cts_pb13: usart3_cts_pb13 {
				pinmux = <STM32F1_PINMUX('B', 13, GPIO_IN, USART3_REMAP1)>;
				bias-pull-up;
				drive-open-drain;
			};

			usart3_cts_pd11: usart3_cts_pd11 {
				pinmux = <STM32F1_PINMUX('D', 11, GPIO_IN, USART3_REMAP2)>;
				bias-pull-up;
				drive-open-drain;
			};

			/* UART_RTS / USART_RTS */

			usart1_rts_pa12: usart1_rts_pa12 {
				pinmux = <STM32F1_PINMUX('A', 12, ALTERNATE, NO_REMAP)>;
			};

			usart2_rts_pa1: usart2_rts_pa1 {
				pinmux = <STM32F1_PINMUX('A', 1, ALTERNATE, USART2_REMAP0)>;
			};

			usart2_rts_pd4: usart2_rts_pd4 {
				pinmux = <STM32F1_PINMUX('D', 4, ALTERNATE, USART2_REMAP1)>;
			};

			usart3_rts_pb14: usart3_rts_pb14 {
				pinmux = <STM32F1_PINMUX('B', 14, ALTERNATE, USART3_REMAP0)>;
			};

			usart3_rts_pb14: usart3_rts_pb14 {
				pinmux = <STM32F1_PINMUX('B', 14, ALTERNATE, USART3_REMAP1)>;
			};

			usart3_rts_pd12: usart3_rts_pd12 {
				pinmux = <STM32F1_PINMUX('D', 12, ALTERNATE, USART3_REMAP2)>;
			};

			/* UART_RX / USART_RX */

			usart1_rx_pa10: usart1_rx_pa10 {
				pinmux = <STM32F1_PINMUX('A', 10, GPIO_IN, USART1_REMAP0)>;
			};

			usart1_rx_pb7: usart1_rx_pb7 {
				pinmux = <STM32F1_PINMUX('B', 7, GPIO_IN, USART1_REMAP1)>;
			};

			usart2_rx_pa3: usart2_rx_pa3 {
				pinmux = <STM32F1_PINMUX('A', 3, GPIO_IN, USART2_REMAP0)>;
			};

			usart2_rx_pd6: usart2_rx_pd6 {
				pinmux = <STM32F1_PINMUX('D', 6, GPIO_IN, USART2_REMAP1)>;
			};

			usart3_rx_pb11: usart3_rx_pb11 {
				pinmux = <STM32F1_PINMUX('B', 11, GPIO_IN, USART3_REMAP0)>;
			};

			usart3_rx_pc11: usart3_rx_pc11 {
				pinmux = <STM32F1_PINMUX('C', 11, GPIO_IN, USART3_REMAP1)>;
			};

			usart3_rx_pd9: usart3_rx_pd9 {
				pinmux = <STM32F1_PINMUX('D', 9, GPIO_IN, USART3_REMAP2)>;
			};

			uart4_rx_pc11: uart4_rx_pc11 {
				pinmux = <STM32F1_PINMUX('C', 11, GPIO_IN, NO_REMAP)>;
			};

			uart5_rx_pd2: uart5_rx_pd2 {
				pinmux = <STM32F1_PINMUX('D', 2, GPIO_IN, NO_REMAP)>;
			};

			/* UART_TX / USART_TX */

			usart1_tx_pa9: usart1_tx_pa9 {
				pinmux = <STM32F1_PINMUX('A', 9, ALTERNATE, USART1_REMAP0)>;
			};

			usart1_tx_pb6: usart1_tx_pb6 {
				pinmux = <STM32F1_PINMUX('B', 6, ALTERNATE, USART1_REMAP1)>;
			};

			usart2_tx_pa2: usart2_tx_pa2 {
				pinmux = <STM32F1_PINMUX('A', 2, ALTERNATE, USART2_REMAP0)>;
			};

			usart2_tx_pd5: usart2_tx_pd5 {
				pinmux = <STM32F1_PINMUX('D', 5, ALTERNATE, USART2_REMAP1)>;
			};

			usart3_tx_pb10: usart3_tx_pb10 {
				pinmux = <STM32F1_PINMUX('B', 10, ALTERNATE, USART3_REMAP0)>;
			};

			usart3_tx_pc10: usart3_tx_pc10 {
				pinmux = <STM32F1_PINMUX('C', 10, ALTERNATE, USART3_REMAP1)>;
			};

			usart3_tx_pd8: usart3_tx_pd8 {
				pinmux = <STM32F1_PINMUX('D', 8, ALTERNATE, USART3_REMAP2)>;
			};

			uart4_tx_pc10: uart4_tx_pc10 {
				pinmux = <STM32F1_PINMUX('C', 10, ALTERNATE, NO_REMAP)>;
			};

			uart5_tx_pc12: uart5_tx_pc12 {
				pinmux = <STM32F1_PINMUX('C', 12, ALTERNATE, NO_REMAP)>;
			};

		};
	};
};
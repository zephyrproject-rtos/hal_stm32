# Copyright (c) 2024 STMicroelectronics
#
# SPDX-License-Identifier: Apache-2.0

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_LL_ONLY "1 << 0")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_LL_HOST "0 << 0")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_NO_SVC_CHANGE_DESC "1 << 1")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_WITH_SVC_CHANGE_DESC "0 << 1")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_DEVICE_NAME_RO "1 << 2")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_DEVICE_NAME_RW "0 << 2")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_EXT_ADV "1 << 3")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_NO_EXT_ADV "0 << 3")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_CS_ALGO2 "1 << 4")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_NO_CS_ALGO2 "0 << 4")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_REDUC_GATTDB_NVM "1 << 5")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_FULL_GATTDB_NVM "0 << 5")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_GATT_CACHING_USED "1 << 6")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_GATT_CACHING_NOTUSED "0 << 6")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_POWER_CLASS_1 "1 << 7")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_POWER_CLASS_2_3 "0 << 7")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_APPEARANCE_WRITABLE "1 << 0")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_APPEARANCE_READONLY "0 << 0")

MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_ENHANCED_ATT_SUPPORTED "1 << 1")
MATH(EXPR SHCI_C2_BLE_INIT_OPTIONS_ENHANCED_ATT_NOTSUPPORTED "0 << 1")

if(CONFIG_BT_DEVICE_NAME_GATT_WRITABLE)
    message(STATUS "CONFIG_BT_DEVICE_NAME_GATT_WRITABLE: ${CONFIG_BT_DEVICE_NAME_GATT_WRITABLE}")
	set(CFG_DEVICE_NAME ${SHCI_C2_BLE_INIT_OPTIONS_DEVICE_NAME_RW})
else()
    message(STATUS "CONFIG_BT_DEVICE_NAME_GATT_WRITABLE: UNDEFINED")
	set(CFG_DEVICE_NAME ${SHCI_C2_BLE_INIT_OPTIONS_DEVICE_NAME_RO})
endif()

if(CONFIG_BT_EXT_ADV)
    message(STATUS "CONFIG_BT_EXT_ADV: ${CONFIG_BT_EXT_ADV}")
    MATH(EXPR CFG_EXT_ADV "${SHCI_C2_BLE_INIT_OPTIONS_EXT_ADV} | ${SHCI_C2_BLE_INIT_OPTIONS_CS_ALGO2}")
else()
    message(STATUS "CONFIG_BT_EXT_ADV: UNDEFINED")
    MATH(EXPR CFG_EXT_ADV "${SHCI_C2_BLE_INIT_OPTIONS_NO_EXT_ADV} | ${SHCI_C2_BLE_INIT_OPTIONS_NO_CS_ALGO2}")
endif()

if(CONFIG_BT_GATT_CACHING)
    message(STATUS "CONFIG_BT_GATT_CACHING: ${CONFIG_BT_GATT_CACHING}")
	set(CFG_GATT_CACHING ${SHCI_C2_BLE_INIT_OPTIONS_GATT_CACHING_USED})
else()
    message(STATUS "CONFIG_BT_GATT_CACHING: UNDEFINED")
	set(CFG_GATT_CACHING ${SHCI_C2_BLE_INIT_OPTIONS_GATT_CACHING_NOTUSED})
endif()

MATH(EXPR CFG_BLE_OPTIONS "${SHCI_C2_BLE_INIT_OPTIONS_LL_HOST} | ${SHCI_C2_BLE_INIT_OPTIONS_WITH_SVC_CHANGE_DESC} | ${CFG_DEVICE_NAME} | ${CFG_EXT_ADV} | ${SHCI_C2_BLE_INIT_OPTIONS_FULL_GATTDB_NVM} | ${CFG_GATT_CACHING} | ${SHCI_C2_BLE_INIT_OPTIONS_POWER_CLASS_2_3}" OUTPUT_FORMAT HEXADECIMAL)

if(CONFIG_BT_DEVICE_APPEARANCE_GATT_WRITABLE)
    message(STATUS "CONFIG_BT_DEVICE_APPEARANCE_GATT_WRITABLE: ${CONFIG_BT_DEVICE_APPEARANCE_GATT_WRITABLE}")
	set(CFG_DEVICE_APPEARANCE ${SHCI_C2_BLE_INIT_OPTIONS_APPEARANCE_WRITABLE})
else()
    message(STATUS "CONFIG_BT_DEVICE_APPEARANCE_GATT_WRITABLE: UNDEFINED")
	set(CFG_DEVICE_APPEARANCE ${SHCI_C2_BLE_INIT_OPTIONS_APPEARANCE_READONLY})
endif()

if(CONFIG_BT_EATT)
    message(STATUS "CONFIG_BT_EATT: ${CONFIG_BT_EATT}")
	set(CFG_EATT ${SHCI_C2_BLE_INIT_OPTIONS_ENHANCED_ATT_SUPPORTED})
else()
    message(STATUS "CONFIG_BT_EATT: UNDEFINED")
	set(CFG_EATT ${SHCI_C2_BLE_INIT_OPTIONS_ENHANCED_ATT_NOTSUPPORTED})
endif()

set(CFG_BLE_OPTIONS_EXT ${CFG_DEVICE_APPEARANCE} | ${CFG_EATT})
MATH(EXPR CFG_BLE_OPTIONS_EXT "${CFG_DEVICE_APPEARANCE} | ${CFG_EATT}" OUTPUT_FORMAT HEXADECIMAL)

if(CONFIG_BT_EXT_ADV_MAX_ADV_SET)
    message(STATUS "CONFIG_BT_EXT_ADV_MAX_ADV_SET: ${CONFIG_BT_EXT_ADV_MAX_ADV_SET}")
    if(CONFIG_BT_EXT_ADV_MAX_ADV_SET GREATER 8)
	    set(CFG_BLE_MAX_ADV_SET_NBR 1)
    else()
	    set(CFG_BLE_MAX_ADV_SET_NBR ${CONFIG_BT_EXT_ADV_MAX_ADV_SET})
    endif()
else()
    message(STATUS "CONFIG_BT_EXT_ADV_MAX_ADV_SET: UNDEFINED")
	set(CFG_BLE_MAX_ADV_SET_NBR 1)
endif()

if(CFG_BLE_MAX_ADV_SET_NBR LESS 4)
	set(CFG_BLE_MAX_ADV_DATA_LEN 1650)
elseif(CFG_BLE_MAX_ADV_SET_NBR EQUAL 4)
	set(CFG_BLE_MAX_ADV_DATA_LEN 1035)
elseif(CFG_BLE_MAX_ADV_SET_NBR EQUAL 5)
	set(CFG_BLE_MAX_ADV_DATA_LEN 621)
elseif(CFG_BLE_MAX_ADV_SET_NBR EQUAL 6)
	set(CFG_BLE_MAX_ADV_DATA_LEN 414)
elseif(CFG_BLE_MAX_ADV_SET_NBR GREATER 6)
	set(CFG_BLE_MAX_ADV_DATA_LEN 207)
endif()

message(STATUS "BLE Stack modularity configuration:")
message(STATUS "CFG_BLE_OPTIONS: ${CFG_BLE_OPTIONS}")
message(STATUS "CFG_BLE_OPTIONS_EXT: ${CFG_BLE_OPTIONS_EXT}")
message(STATUS "CFG_BLE_MAX_ADV_SET_NBR: ${CFG_BLE_MAX_ADV_SET_NBR}")
message(STATUS "CFG_BLE_MAX_ADV_DATA_LEN: ${CFG_BLE_MAX_ADV_DATA_LEN}")

zephyr_compile_definitions(
	-DCFG_BLE_OPTIONS=${CFG_BLE_OPTIONS}
	-DCFG_BLE_OPTIONS_EXT=${CFG_BLE_OPTIONS_EXT}
	-DCFG_BLE_MAX_ADV_SET_NBR=${CFG_BLE_MAX_ADV_SET_NBR}
	-DCFG_BLE_MAX_ADV_DATA_LEN=${CFG_BLE_MAX_ADV_DATA_LEN}
)

zephyr_include_directories(hci)

zephyr_sources(hci/hw_ipcc.c)
zephyr_sources(hci/shci.c)
zephyr_sources(hci/shci_tl.c)
zephyr_sources(hci/shci_tl_if.c)
zephyr_sources(hci/stm_list.c)
zephyr_sources(hci/tl_mbox.c)

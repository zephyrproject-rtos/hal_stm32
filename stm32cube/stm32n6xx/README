STM32CubeN6
###########

Origin:
   ST Microelectronics
   http://www.st.com/en/embedded-software/stm32cuben6.html

Status:
   version v1.2.0

Purpose:
   ST Microelectronics official MCU package for STM32N6 series.

Description:
   This package is an extract of official STM32CubeN6 package written by ST Microelectronics.
   It is composed of STM32Cube hardware abstraction layer (HAL) and low layer (LL) plus a set
   of CMSIS headers files, one for each SoC in STM32N6 series.

Dependencies:
    None.

URL:
   https://github.com/STMicroelectronics/STM32CubeN6

Commit:
   85170d2c6eaa438622ed879caa4d7bcc6cc3920d

Maintained-by:
   External

License:
   BSD-3-Clause

License Link:
   https://opensource.org/licenses/BSD-3-Clause

Patch List:
   *Changes from official delivery:
    -dos2unix applied
    -trailing white spaces removed

   *Provision to enable hal & ll asserts added
    -Added stm32cube/stm32n6xx/drivers/include/stm32_assert.h
    -Removed unused stm32cube/stm32n6xx/drivers/include/stm32_assert_template.h

   *Fix to remove PAGESIZE definition which conflicts with POSIX
    Impacted files:
     drivers/include/Legacy/stm32_hal_legacy.h

   *Fix FSBL configuration
    -Remove CMSE_NS_ENTRY modifier, which requires enabling CONFIG_ARM_FIRMWARE_HAS_SECURE_ENTRY_FUNCS
     which we don't need right now.
    Impacted files:
    -soc/system_stm32n6xx_fsbl.c
    -soc/system_stm32n6xx_s.c

   *Fix SDIO initialization failure when skipping card identification sequence
     Fixes an issue in the STM32N6 SDIO driver where HAL_SDIO_Init() fails if
     the card identification sequence is skipped.
     Impacted files:
      stm32cube/stm32n6xx/drivers/src/stm32n6xx_hal_sdio.c

   *Fix XSPIM initialization sequence
     Don't cut XSPI2(ext NOR) clock when initializing XSPI1(PSRAM) which doesn't work
     when application is running in XIP on external NOR
    Impacted files:
      stm32cube/stm32n6xx/drivers/src/stm32n6xx_hal_xspi.c
    Internal reference: 212765
    Status : implemented

   *Fix SDIO polling mode data transfer issues
     Fixes two related issues in the STM32N6 SDIO driver: incorrect block count calculation
     that caused the card to hang, and improper buffer size handling that led to misaligned FIFO writes.
     Together, these changes ensure correct and stable data transfer in polling mode.
     Impacted file:
      stm32cube/stm32n6xx/drivers/src/stm32n6xx_hal_sdio.c

   *Allow usage of HAL_DCMIPP_PIPE_SetConfig when DCMIPP is in READY state
     Allow performing PIPE configuration when the DCMIPP device is not only
     in RESET and ERROR states but also in READY state. This allow to
     reconfigure a DCMIPP pipe between 2 use-cases without having to
     call HAL_DCMIPP_DeInit / HAL_DCMIPP_Init.
     Impacted file:
      stm32cube/stm32n6xx/drivers/src/stm32n6xx_hal_dcmipp.c
    Internal reference: 215688

   See release_note.html from STM32Cube

diff a/stm32cube/stm32f3xx/drivers/src/stm32f3xx_hal_dma.c b/stm32cube/stm32f3xx/drivers/src/stm32f3xx_hal_dma.c	(rejected hunks)
@@ -306,19 +306,19 @@ HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, ui
 
   if(HAL_DMA_STATE_READY == hdma->State)
   {
-  	/* Change DMA peripheral state */  
+	/* Change DMA peripheral state */
   	hdma->State = HAL_DMA_STATE_BUSY;
   	
   	hdma->ErrorCode = HAL_DMA_ERROR_NONE;
   	
   	/* Disable the peripheral */
-  	hdma->Instance->CCR &= ~DMA_CCR_EN;  
+	hdma->Instance->CCR &= ~DMA_CCR_EN;
   	
   	/* Configure the source, destination address and the data length */
   	DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
   	
   	/* Enable the Peripheral */
-  	hdma->Instance->CCR |= DMA_CCR_EN;  
+	hdma->Instance->CCR |= DMA_CCR_EN;
   }
   else
   {
@@ -353,7 +353,7 @@ HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress,
 
   if(HAL_DMA_STATE_READY == hdma->State)
   {
-  	/* Change DMA peripheral state */  
+	/* Change DMA peripheral state */
   	hdma->State = HAL_DMA_STATE_BUSY;
   	
   	hdma->ErrorCode = HAL_DMA_ERROR_NONE;
@@ -361,7 +361,7 @@ HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress,
   	/* Disable the peripheral */
   	hdma->Instance->CCR &= ~DMA_CCR_EN;
   	
-  	/* Configure the source, destination address and the data length */  
+	/* Configure the source, destination address and the data length */
   	DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
   	
   	/* Enable the transfer complete, & transfer error interrupts */
